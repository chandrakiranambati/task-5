1. --- Print odd numbers in an array

let numbers = [6,8,3,2,5,10,12];
let evenNumbers = numbers.filter(function(n) {
   return (n % 2 != 0);
});
console.log(evenNumbers);

2. --- Convert all the strings to title caps in a string array

 let str = "my name is chandra kiran" 
let titleCase = function(str) {
  return str
      .split(' ') .map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase()) .join(' ');
}
console.log(titleCase(str));

3. --- Sum of all numbers in an array

var a=[10,20,30,40,50]
var total=function(a) {
return a.reduce((sum,value)=>sum+value,0)
}
console.log(total(a));

4.--- Return all the prime numbers in an array
let array = [10,23,37,45,57];
let Prime = function(num) {
  for (let start = 2; num > start; start++) {
    if (num % start == 0) {
      return false;
    }
  }
  return num > 1;
}

console.log(array.filter(Prime));

5.--- Return all the palindromes in an array

let p=['kiran','civic','minim','chandra','level'];
let pal=function(str) {
return str== str.split('').reverse('').join('');
}
const res=p.filter(a=>pal(a));
console.log(res);

6.--- Return median of two sorted arrays of same size

function numbersystem(n1 = [], n2 = []) {
  const mergedNums = [...n1, ...n2].sort((a, b) => a - b);
  const midPoint = Math.floor(mergedNums.length / 2);

  return mergedNums.length % 2 !== 0
    ? mergedNums[midPoint]
    : (mergedNums[midPoint - 1] + mergedNums[midPoint]) / 2;
}

7.---

function findMedianSortedArrays(n1 = [], n2 = []) {
  let i1 = 0;
  let i2 = 0;
  const l1 = n1.length;
  const l2 = n2.length;
  const l = l1 + l2;

  if (l === 0) {
    return null;
  }

  const merged = [];

  while (i1 < l1 && i2 < l2) {
    if (n1[i1] <= n2[i2]) {
      merged.push(n1[i1++]);
    } else {
      merged.push(n2[i2++]);
    }
  }

  while (i1 < l1) {
    merged.push(n1[i1++]);
  }
  while (i2 < l2) {
    merged.push(n2[i2++]);
  }

  const isOdd = l % 2;
  if (isOdd) {
    return merged[(l - 1) / 2];
  } else {
    return (merged[merged.length / 2] + merged[merged.length / 2 - 1]) / 2;
  }
}

const n1 = [1,3];
const n2 = [2];

console.log(findMedianSortedArrays(n1, n2))

1.---




2.---Convert all the strings to title caps in a string array

let string = "my name is chandra" 
let upperCase = (str) => { //arrow function
  return str
      .split(' ')
      .map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase())
      .join(' ');
}
console.log(upperCase(string));

3.--- Sum of all numbers in an array
let n = [6,8,3,2,5,10,12];
let total = (n) => {
  return n.reduce((sum , val) => sum +val , 0)
}
console.log(total(num))

4.---Return all the prime numbers in an array
const array  = [10,23,37,45,57];
const Prime  = newArray.filter(n => {
  for (let i = 2; i < n; i++) {
    if (n % i === 0) return false;
  }
  return n !== 1;
}); 
console.log(Prime);

5.--- Return all the palindromes in an array

let palindrom = ['kiran','civic','minim','chandra','level'] 
let p = (str) => { 
  return str == str.split('').reverse().join('');
}
const results = palindrom.filter(pal => p(pal));
console.log(result);

